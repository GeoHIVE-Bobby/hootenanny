Build a Very Limited Hootenanny core-only Docker image

TODO:
* Merge the build and install into the Dockerfile
* Figure out how to get systemd working in a non-privileged container.
* Turn on Postgres and the UI

* cd to the hoot directory

* Get the Centos base image
sudo docker pull centos:centos7.4.1708


* Build a small Centos7 image:
docker build --rm -t dhoot ./docker/hootcore/


* Run the image and mount this directory in it:
docker run --rm -v $(pwd):/root/hoot -it dhoot


* Inside the container:
cd ~/hoot
./DockerBuildHootCore.sh


* Check that Hoot was installed and the tests run cleanly.
# NOTE: There is a failure with one of the print tests. I can't figure out
# what the difference in the test output is but Hoot complains.
cd /var/lib/hootenanny
HootTest --slow --diff


* Then ctrl-p ctrl-q to get out

* Get the container ID
docker ps


* Commit the changes to a new image
docker commit -m "Hoot for GBDX" <container ID>  <Docker Username>/hootcore:<version>


NOTE: Create a version and then a "latest" image
# docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]

docker tag <Docker Username>/hootcore:<version> <Docker Username>/hootcore:latest


* Push the image upto the Docker repo
docker push <Docker Username>/hootcore:latest
docker push <Docker Username>/hootcore:<version>


* Em Tasol

#####
Testing the image:
docker run --rm -v $(pwd)/test:/mnt/work -it <Docker Username>/hootcore:latest

Then run the /hoot-gbdx.py script or just run Hoot
